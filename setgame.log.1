INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO AWT-EventQueue-0 de.htwg.se.setGame.Controller - Send `ExitApplication` event
INFO AWT-EventQueue-0 de.htwg.se.setGame.Tui - Shutdown UI
INFO main de.htwg.se.setGame.SetGameApplication$ - Shutdown complete
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Shutting down remote daemon.
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remote daemon shut down; proceeding with flushing remote transports.
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting shut down
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remoting shut down.
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-5 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-6 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
