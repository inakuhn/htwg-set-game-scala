INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO AWT-EventQueue-0 de.htwg.se.setGame.Controller - Send `ExitApplication` event
INFO AWT-EventQueue-0 de.htwg.se.setGame.Tui - Shutdown UI
INFO main de.htwg.se.setGame.SetGameApplication$ - Shutdown complete
INFO default-akka.actor.default-dispatcher-4 akka.remote.RemoteActorRefProvider$RemotingTerminator - Shutting down remote daemon.
INFO default-akka.actor.default-dispatcher-4 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remote daemon shut down; proceeding with flushing remote transports.
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting shut down
INFO default-akka.actor.default-dispatcher-4 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remoting shut down.
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-16 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,tree), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,tree), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,tree), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,tree), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,tree), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,tree), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,tree), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,tree), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,tree), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,tree), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,tree), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,tree), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,tree), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,tree), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,tree), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,tree), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,tree), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,tree), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,tree), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,tree), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,tree), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,tree), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,tree), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,tree), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,tree), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,tree), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,tree))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-16 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
ERROR default-akka.actor.default-dispatcher-4 akka.remote.transport.netty.NettyTransport - failed to bind to /127.0.0.1:2552, shutting down Netty transport
ERROR default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting error: [Startup failed] [
akka.remote.RemoteTransportException: Startup failed
	at akka.remote.Remoting.akka$remote$Remoting$$notifyError(Remoting.scala:145)
	at akka.remote.Remoting.start(Remoting.scala:211)
	at akka.remote.RemoteActorRefProvider.init(RemoteActorRefProvider.scala:212)
	at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:657)
	at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:654)
	at akka.actor.ActorSystemImpl._start(ActorSystem.scala:654)
	at akka.actor.ActorSystemImpl.start(ActorSystem.scala:670)
	at akka.actor.ActorSystem$.apply(ActorSystem.scala:142)
	at akka.actor.ActorSystem$.apply(ActorSystem.scala:109)
	at akka.actor.ActorSystem$.apply(ActorSystem.scala:100)
	at de.htwg.se.setGame.SetGameApplication$.main(SetGameApplication.scala:10)
	at de.htwg.se.setGame.SetGameApplication.main(SetGameApplication.scala)
Caused by: org.jboss.netty.channel.ChannelException: Failed to bind to: /127.0.0.1:2552
	at org.jboss.netty.bootstrap.ServerBootstrap.bind(ServerBootstrap.java:272)
	at akka.remote.transport.netty.NettyTransport$$anonfun$listen$1.apply(NettyTransport.scala:417)
	at akka.remote.transport.netty.NettyTransport$$anonfun$listen$1.apply(NettyTransport.scala:413)
	at scala.util.Success$$anonfun$map$1.apply(Try.scala:237)
	at scala.util.Try$.apply(Try.scala:192)
	at scala.util.Success.map(Try.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.Future$$anonfun$map$1.apply(Future.scala:237)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.jboss.netty.channel.socket.nio.NioServerBoss$RegisterTask.run(NioServerBoss.java:193)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.processTaskQueue(AbstractNioSelector.java:391)
	at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:315)
	at org.jboss.netty.channel.socket.nio.NioServerBoss.run(NioServerBoss.java:42)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Shutting down remote daemon.
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remote daemon shut down; proceeding with flushing remote transports.
ERROR default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting system has been terminated abrubtly. Attempting to shut down transports
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting shut down
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remoting shut down.
INFO AWT-EventQueue-0 de.htwg.se.setGame.Controller - Send `ExitApplication` event
INFO AWT-EventQueue-0 de.htwg.se.setGame.Tui - Shutdown UI
INFO main de.htwg.se.setGame.SetGameApplication$ - Shutdown complete
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Shutting down remote daemon.
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remote daemon shut down; proceeding with flushing remote transports.
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting shut down
INFO default-akka.actor.default-dispatcher-3 akka.remote.RemoteActorRefProvider$RemotingTerminator - Remoting shut down.
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-6 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-6 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,fill,one), Card(ellipse,red,fill,two), Card(ellipse,red,fill,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,fill,one), Card(ellipse,green,fill,two), Card(ellipse,green,fill,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,fill,one), Card(ellipse,purple,fill,two), Card(ellipse,purple,fill,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,fill,one), Card(wave,red,fill,two), Card(wave,red,fill,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,fill,one), Card(wave,green,fill,two), Card(wave,green,fill,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,fill,one), Card(wave,purple,fill,two), Card(wave,purple,fill,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,fill,one), Card(balk,red,fill,two), Card(balk,red,fill,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,fill,one), Card(balk,green,fill,two), Card(balk,green,fill,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,fill,one), Card(balk,purple,fill,two), Card(balk,purple,fill,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,fill,one), Card(ellipse,red,fill,two), Card(ellipse,red,fill,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,fill,one), Card(ellipse,green,fill,two), Card(ellipse,green,fill,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,fill,one), Card(ellipse,purple,fill,two), Card(ellipse,purple,fill,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,fill,one), Card(wave,red,fill,two), Card(wave,red,fill,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,fill,one), Card(wave,green,fill,two), Card(wave,green,fill,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,fill,one), Card(wave,purple,fill,two), Card(wave,purple,fill,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,fill,one), Card(balk,red,fill,two), Card(balk,red,fill,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,fill,one), Card(balk,green,fill,two), Card(balk,green,fill,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,fill,one), Card(balk,purple,fill,two), Card(balk,purple,fill,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-5 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-4 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-4 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-3 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-6 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-6 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-3 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-3 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: 
INFO main de.htwg.se.setGame.Tui - Unknown menu entry: 
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO main de.htwg.se.setGame.Tui - Read input: c
INFO main de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-2 de.htwg.se.setGame.actor.CardActor - Stopped
INFO main de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
INFO main de.htwg.se.setGame.Tui - # PLAYER-MENU #
INFO main de.htwg.se.setGame.Tui -  p - Add player
INFO main de.htwg.se.setGame.Tui -  c - Cancel
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-5 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-5 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO default-akka.actor.default-dispatcher-2 akka.event.slf4j.Slf4jLogger - Slf4jLogger started
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Starting remoting
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting started; listening on addresses :[akka.tcp://default@127.0.0.1:2552]
INFO default-akka.actor.default-dispatcher-2 akka.remote.Remoting - Remoting now listens on addresses: [akka.tcp://default@127.0.0.1:2552]
INFO main de.htwg.se.setGame.Tui - Initiate UI
INFO main de.htwg.se.setGame.Tui - # MAIN-MENU #
INFO main de.htwg.se.setGame.Tui -  x - Exit application
INFO main de.htwg.se.setGame.Tui -  c - Create new game
INFO main de.htwg.se.setGame.Tui - Please choose?
INFO AWT-EventQueue-0 de.htwg.se.setGame.Controller - Send `AddPlayer` event
INFO default-akka.actor.default-dispatcher-4 de.htwg.se.setGame.actor.CardActor - Stopped
INFO AWT-EventQueue-0 de.htwg.se.setGame.Controller - Actor result: List(Card(ellipse,red,filled,one), Card(ellipse,red,filled,two), Card(ellipse,red,filled,three), Card(ellipse,red,halfFilled,one), Card(ellipse,red,halfFilled,two), Card(ellipse,red,halfFilled,three), Card(ellipse,red,empty,one), Card(ellipse,red,empty,two), Card(ellipse,red,empty,three), Card(ellipse,green,filled,one), Card(ellipse,green,filled,two), Card(ellipse,green,filled,three), Card(ellipse,green,halfFilled,one), Card(ellipse,green,halfFilled,two), Card(ellipse,green,halfFilled,three), Card(ellipse,green,empty,one), Card(ellipse,green,empty,two), Card(ellipse,green,empty,three), Card(ellipse,purple,filled,one), Card(ellipse,purple,filled,two), Card(ellipse,purple,filled,three), Card(ellipse,purple,halfFilled,one), Card(ellipse,purple,halfFilled,two), Card(ellipse,purple,halfFilled,three), Card(ellipse,purple,empty,one), Card(ellipse,purple,empty,two), Card(ellipse,purple,empty,three), Card(wave,red,filled,one), Card(wave,red,filled,two), Card(wave,red,filled,three), Card(wave,red,halfFilled,one), Card(wave,red,halfFilled,two), Card(wave,red,halfFilled,three), Card(wave,red,empty,one), Card(wave,red,empty,two), Card(wave,red,empty,three), Card(wave,green,filled,one), Card(wave,green,filled,two), Card(wave,green,filled,three), Card(wave,green,halfFilled,one), Card(wave,green,halfFilled,two), Card(wave,green,halfFilled,three), Card(wave,green,empty,one), Card(wave,green,empty,two), Card(wave,green,empty,three), Card(wave,purple,filled,one), Card(wave,purple,filled,two), Card(wave,purple,filled,three), Card(wave,purple,halfFilled,one), Card(wave,purple,halfFilled,two), Card(wave,purple,halfFilled,three), Card(wave,purple,empty,one), Card(wave,purple,empty,two), Card(wave,purple,empty,three), Card(balk,red,filled,one), Card(balk,red,filled,two), Card(balk,red,filled,three), Card(balk,red,halfFilled,one), Card(balk,red,halfFilled,two), Card(balk,red,halfFilled,three), Card(balk,red,empty,one), Card(balk,red,empty,two), Card(balk,red,empty,three), Card(balk,green,filled,one), Card(balk,green,filled,two), Card(balk,green,filled,three), Card(balk,green,halfFilled,one), Card(balk,green,halfFilled,two), Card(balk,green,halfFilled,three), Card(balk,green,empty,one), Card(balk,green,empty,two), Card(balk,green,empty,three), Card(balk,purple,filled,one), Card(balk,purple,filled,two), Card(balk,purple,filled,three), Card(balk,purple,halfFilled,one), Card(balk,purple,halfFilled,two), Card(balk,purple,halfFilled,three), Card(balk,purple,empty,one), Card(balk,purple,empty,two), Card(balk,purple,empty,three))
